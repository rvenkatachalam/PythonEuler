# coding=utf-8

from datetime import datetime

start = datetime.now()

# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

def pent(a):
    return (3*(a**2)-a)/2

success = 0
b = 2

while success == 0:
    a = 1
    while a < b and success ==0:
        tcons = 1*(6*a*a - 2*a + 6*b*b - 2*b)
        s = (2+((4+24*tcons)**0.5))/12
        if (s - int(s)) == 0:
            tcons = 1*(6*b*b - 2*b - 6*a*a + 2*a)
            d = (2+((4+24*tcons)**0.5))/12
            if (d - int(d)) == 0:
                print a,b,s,d, pent(b) - pent(a)
                success = 1
        a += 1
        if success == 1:
            a = b
    b += 1



print('\nSolution start: ' + str(start) + '\n' + 'Solution end  : ' + str(datetime.now()))
